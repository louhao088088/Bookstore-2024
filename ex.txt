本题是 bookstore 大作业的文件存储部分的检查。

需要基于文件存储实现一个 key-value database（键值数据库），即在文件上实现类似 std::map 的功能。

实现方式不限，可以是块状链表。但禁止将非当前指令所需数据存储于内存中。

本题输入指令有以下三种情况：

insert [index] [value]

以 [index] 为索引，插入值为 [value] 的条目
delete [index] [value]

删除以 [index] 为索引，值为 [value] 的条目。请注意，删除的条目可能不存在
find [index]

找出所有索引为 [index] 的条目，并以 [value] 升序顺序输出，每个 [value] 间用一个空格隔开。若索引值为 [index] 的条目不存在，则输出 [null]。在整个指令输出结束后输出 \n
其中，[index] 为长度不超过 64 个字节的字符串(无空白字符)，[value] 为任意类型。

数据中，[index] 和 [value] 均可能重复，但同一个 [index] 对应的 [value] 不可重复。

此外，对于在 bookstore 中使用文件存储的建议：

可以将整个存储单元、文件读写模块封装成一个类。

如果要用该类对不同的对象进行存储，可以写成模板类。

输入格式
第一行为整数 n，表示总命令数。

接下来 n 行为 n 条指令，指令为上文提到的三种指令之一。

输出格式
在执行 find index 指令后，找出所有索引为 index 的条目，并以任意方式输出 value 升序的顺序输出，每个 value 间用一个空格隔开。若索引值为 index 的条目不存在，则输出 null 。在整个指令输出结束后回车换行。

样例
输入

8
insert FlowersForAlgernon 1966
insert CppPrimer 2012
insert Dune 2021
insert CppPrimer 2001
find CppPrimer
find Java
delete Dune 2021
find Dune
输出

2001 2012
null
null
数据范围
1
≤
n
≤
100000
1≤n≤100000；

存储的总条目数不超过 
100000
100000；

保证输入数据合法。

注意，测试中有需要在上一运行结果的基础上继续操作的测试点，而文件的清除操作将由评测机完成，因此你只需要检查文件是否存在，若不存在则创建一个文件。

时空磁盘限制（运行时）
时间限制：500 ms min, 16000 max

内存空间限制：5 MiB min, 6 MiB max

磁盘空间限制：1024 MiB

文件数量限制：20 个


请使用模板类来书写，不要局限于int类型，并且请使用块状链表,并且把文件读写模块独立出来。

请给出一个完整代码。